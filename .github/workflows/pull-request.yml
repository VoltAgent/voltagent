name: PR Checks
on: [pull_request]

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}-commit-lint
      cancel-in-progress: true
    name: Commitlint
    steps:
      - uses: actions/checkout@v4
      - uses: wagoid/commitlint-github-action@v5
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    concurrency:
      group: ${{ github.ref }}-lint-${{ matrix.node-version }}
      cancel-in-progress: true
    name: Lint (Node ${{ matrix.node-version }})
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install Dependencies
        run: |
          pnpm install -w
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
      #- name: lint
      #  run: |
      #    pnpm lint:ci
      #- name: syncpack
      #  run: pnpm sp lint
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    concurrency:
      group: ${{ github.ref }}-pr-build-${{ matrix.node-version }}
      cancel-in-progress: true
    name: Build (Node ${{ matrix.node-version }})
    env:
      NODE_OPTIONS: --max_old_space_size=8192
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
      - name: Install
        run: pnpm install
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
      - name: Build
        run: pnpm build:all
      - name: Publint
        run: pnpm publint:all
      - name: Are The Types Wrong
        run: pnpm attw:all

  test-packages:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - anthropic-ai
          - cli
          - core
          - create-voltagent-app
          - docs-mcp
          - google-ai
          - groq-ai
          - internal
          - langfuse-exporter
          - logger
          - postgres
          - sdk
          - supabase
          - vercel-ai
          - vercel-ai-exporter
          - vercel-ui
          - voice
          - xsai
      fail-fast: false
    concurrency:
      group: ${{ github.ref }}-test-${{ matrix.package }}
      cancel-in-progress: true
    name: Test ${{ matrix.package }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
      - name: Build Package and Dependencies
        run: lerna run build --scope "@voltagent/${{ matrix.package }}" --include-dependencies
      - name: Test Package
        run: lerna run test --scope "@voltagent/${{ matrix.package }}"

  postgres-integration:
    runs-on: ubuntu-latest
    name: PostgreSQL Integration Tests
    concurrency:
      group: ${{ github.ref }}-postgres-integration
      cancel-in-progress: true
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: voltagent_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check for PostgreSQL changes
        id: check_postgres
        run: |
          if git diff --name-only origin/main...HEAD | grep -E '^packages/postgres/'; then
            echo "postgres_changed=true" >> $GITHUB_OUTPUT
          else
            echo "postgres_changed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Skip if no PostgreSQL changes
        if: steps.check_postgres.outputs.postgres_changed == 'false'
        run: echo "No PostgreSQL changes detected, skipping integration tests"
      
      - uses: pnpm/action-setup@v4
        if: steps.check_postgres.outputs.postgres_changed == 'true'
      - uses: actions/setup-node@v4
        if: steps.check_postgres.outputs.postgres_changed == 'true'
        with:
          node-version: 20
          cache: "pnpm"
      
      - name: Install Dependencies
        if: steps.check_postgres.outputs.postgres_changed == 'true'
        run: pnpm install
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
      
      - name: Build Core Dependencies
        if: steps.check_postgres.outputs.postgres_changed == 'true'
        run: pnpm build --scope @voltagent/core
      
      - name: Run PostgreSQL Integration Tests
        if: steps.check_postgres.outputs.postgres_changed == 'true'
        run: |
          cd packages/postgres
          npm run test:integration:ci
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/voltagent_test

  test-core-files:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-file:
          - agent/agent.spec.ts
          - agent/history/index.spec.ts
          - agent/hooks/index.spec.ts
          - agent/open-telemetry/index.spec.ts
          - agent/subagent/index.spec.ts
          - events/index.spec.ts
          - index.spec.ts
          - logger/console-logger.spec.ts
          - logger/events.spec.ts
          - logger/index.spec.ts
          - logger/logger-proxy.spec.ts
          - logger/message-builder.spec.ts
          - mcp/client/index.spec.ts
          - mcp/registry/index.spec.ts
          - memory/in-memory/index.spec.ts
          - memory/libsql/index.spec.ts
          - memory/manager/index.spec.ts
          - retriever/retriever.spec.ts
          - retriever/tools/index.spec.ts
          - server/api.spec.ts
          - server/custom-endpoints/index.spec.ts
          - telemetry/client/index.spec.ts
          - telemetry/exporter/index.spec.ts
          - tool/index.spec.ts
          - tool/manager/index.spec.ts
          - tool/reasoning/index.spec.ts
          - utils/createPrompt/index.spec.ts
          - utils/queue/queue.spec.ts
          - utils/serialization/index.spec.ts
          - utils/streams/stream-event-forwarder.spec.ts
          - utils/streams/transformers.spec.ts
          - utils/toolParser/index.spec.ts
          - voltops/client-priority.spec.ts
          - voltops/client.spec.ts
          - voltops/prompt-api-client.spec.ts
          - voltops/prompt-manager.spec.ts
          - voltops/template-engine.spec.ts
          - voltops/types.spec.ts
          - workflow/chain.spec.ts
          - workflow/core.spec.ts
          - workflow/internal/state.spec.ts
          - workflow/step-schemas-runtime.spec.ts
          - workflow/suspend-controller.spec.ts
          - workflow/suspend-resume.spec.ts
          - workflow/workflow-types.spec.ts
      fail-fast: false
    name: Test core/${{ matrix.test-file }}
    concurrency:
      group: ${{ github.ref }}-test-core-${{ matrix.test-file }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"
      - name: Install Dependencies
        run: pnpm install
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
      - name: Build Core Package and Dependencies
        run: lerna run build --scope "@voltagent/core" --include-dependencies
      - name: Run Individual Test with Timeout
        run: |
          cd packages/core
          echo "Testing: ${{ matrix.test-file }}"
          timeout 30s npx vitest run "src/${{ matrix.test-file }}" --reporter=verbose || EXIT_CODE=$?
          if [ "$EXIT_CODE" = "124" ]; then
            echo "::error::HANGING TEST DETECTED: ${{ matrix.test-file }}"
            exit 1
          elif [ "$EXIT_CODE" != "0" ]; then
            echo "::error::TEST FAILED: ${{ matrix.test-file }}"
            exit 1
          fi
          echo "::notice::Test passed: ${{ matrix.test-file }}"

  tsdoc-check:
    runs-on: ubuntu-latest
    name: Check TSDoc Links
    concurrency:
      group: ${{ github.ref }}-tsdoc-check
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: Check TSDoc Links
        run: npx tsdoc-link-check --patterns packages/**
